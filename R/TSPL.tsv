Key	Form	URL
'obj	'obj	https://scheme.com/tspl4/objects.html#./objects:s2
`obj	`obj	https://scheme.com/tspl4/objects.html#./objects:s5
,obj	,obj	https://scheme.com/tspl4/objects.html#./objects:s5
,@obj	,@obj	https://scheme.com/tspl4/objects.html#./objects:s5
=>	=>	https://scheme.com/tspl4/control.html#./control:s16
_	_	https://scheme.com/tspl4/syntax.html#./syntax:s26
...	...	https://scheme.com/tspl4/syntax.html#./syntax:s26
#'template	#'template	https://scheme.com/tspl4/syntax.html#./syntax:s33
#`template	#`template	https://scheme.com/tspl4/syntax.html#./syntax:s40
#,template	#,template	https://scheme.com/tspl4/syntax.html#./syntax:s40
#,@template	#,@template	https://scheme.com/tspl4/syntax.html#./syntax:s40
&assertion	&assertion	https://scheme.com/tspl4/exceptions.html#./exceptions:s21
&condition	&condition	https://scheme.com/tspl4/exceptions.html#./exceptions:s13
&error	&error	https://scheme.com/tspl4/exceptions.html#./exceptions:s22
&i/o	&i/o	https://scheme.com/tspl4/exceptions.html#./exceptions:s32
&i/o-decoding	&i/o-decoding	https://scheme.com/tspl4/exceptions.html#./exceptions:s42
&i/o-encoding	&i/o-encoding	https://scheme.com/tspl4/exceptions.html#./exceptions:s43
&i/o-file-already-exists	&i/o-file-already-exists	https://scheme.com/tspl4/exceptions.html#./exceptions:s39
&i/o-file-does-not-exist	&i/o-file-does-not-exist	https://scheme.com/tspl4/exceptions.html#./exceptions:s40
&i/o-file-is-read-only	&i/o-file-is-read-only	https://scheme.com/tspl4/exceptions.html#./exceptions:s38
&i/o-file-protection	&i/o-file-protection	https://scheme.com/tspl4/exceptions.html#./exceptions:s37
&i/o-filename	&i/o-filename	https://scheme.com/tspl4/exceptions.html#./exceptions:s36
&i/o-invalid-position	&i/o-invalid-position	https://scheme.com/tspl4/exceptions.html#./exceptions:s35
&i/o-port	&i/o-port	https://scheme.com/tspl4/exceptions.html#./exceptions:s41
&i/o-read	&i/o-read	https://scheme.com/tspl4/exceptions.html#./exceptions:s33
&i/o-write	&i/o-write	https://scheme.com/tspl4/exceptions.html#./exceptions:s34
&implementation-restriction	&implementation-restriction	https://scheme.com/tspl4/exceptions.html#./exceptions:s28
&irritants	&irritants	https://scheme.com/tspl4/exceptions.html#./exceptions:s25
&lexical	&lexical	https://scheme.com/tspl4/exceptions.html#./exceptions:s29
&message	&message	https://scheme.com/tspl4/exceptions.html#./exceptions:s24
&no-infinities	&no-infinities	https://scheme.com/tspl4/exceptions.html#./exceptions:s44
&no-nans	&no-nans	https://scheme.com/tspl4/exceptions.html#./exceptions:s45
&non-continuable	&non-continuable	https://scheme.com/tspl4/exceptions.html#./exceptions:s27
&serious	&serious	https://scheme.com/tspl4/exceptions.html#./exceptions:s19
&syntax	&syntax	https://scheme.com/tspl4/exceptions.html#./exceptions:s30
&undefined	&undefined	https://scheme.com/tspl4/exceptions.html#./exceptions:s31
&violation	&violation	https://scheme.com/tspl4/exceptions.html#./exceptions:s20
&warning	&warning	https://scheme.com/tspl4/exceptions.html#./exceptions:s23
&who	&who	https://scheme.com/tspl4/exceptions.html#./exceptions:s26
*	(* num ...)	https://scheme.com/tspl4/objects.html#./objects:s91
+	(+ num ...)	https://scheme.com/tspl4/objects.html#./objects:s89
-	(- num)~(- num1 num2 num3 ...)	https://scheme.com/tspl4/objects.html#./objects:s90
/	(/ num)~(/ num1 num2 num3 ...)	https://scheme.com/tspl4/objects.html#./objects:s92
<	(< real1 real2 real3 ...)	https://scheme.com/tspl4/objects.html#./objects:s88
<=	(<= real1 real2 real3 ...)	https://scheme.com/tspl4/objects.html#./objects:s88
=	(= num1 num2 num3 ...)	https://scheme.com/tspl4/objects.html#./objects:s88
>	(> real1 real2 real3 ...)	https://scheme.com/tspl4/objects.html#./objects:s88
>=	(>= real1 real2 real3 ...)	https://scheme.com/tspl4/objects.html#./objects:s88
abs	(abs real)	https://scheme.com/tspl4/objects.html#./objects:s105
acos	(acos num)	https://scheme.com/tspl4/objects.html#./objects:s132
and	(and expr ...)	https://scheme.com/tspl4/control.html#./control:s11
angle	(angle num)	https://scheme.com/tspl4/objects.html#./objects:s124
append	(append)~(append list ... obj)	https://scheme.com/tspl4/objects.html#./objects:s49
apply	(apply procedure obj ... list)	https://scheme.com/tspl4/control.html#./control:s3
asin	(asin num)	https://scheme.com/tspl4/objects.html#./objects:s132
assert	(assert expression)	https://scheme.com/tspl4/exceptions.html#./exceptions:s5
assertion-violation	(assertion-violation who msg irritant ...)	https://scheme.com/tspl4/exceptions.html#./exceptions:s4
assertion-violation?	(assertion-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s21
assoc	(assoc obj alist)	https://scheme.com/tspl4/objects.html#./objects:s58
assp	(assp procedure alist)	https://scheme.com/tspl4/objects.html#./objects:s60
assq	(assq obj alist)	https://scheme.com/tspl4/objects.html#./objects:s58
assv	(assv obj alist)	https://scheme.com/tspl4/objects.html#./objects:s58
atan	(atan num)~(atan real1 real2)	https://scheme.com/tspl4/objects.html#./objects:s133
begin	(begin expr1 expr2 ...)	https://scheme.com/tspl4/control.html#./control:s4
binary-port?	(binary-port? obj)	https://scheme.com/tspl4/io.html#./io:s45
bitwise-and	(bitwise-and exint ...)	https://scheme.com/tspl4/objects.html#./objects:s134
bitwise-arithmetic-shift	(bitwise-arithmetic-shift exint1 exint2)	https://scheme.com/tspl4/objects.html#./objects:s144
bitwise-arithmetic-shift-left	(bitwise-arithmetic-shift-left exint1 exint2)	https://scheme.com/tspl4/objects.html#./objects:s143
bitwise-arithmetic-shift-right	(bitwise-arithmetic-shift-right exint1 exint2)	https://scheme.com/tspl4/objects.html#./objects:s143
bitwise-bit-count	(bitwise-bit-count exint)	https://scheme.com/tspl4/objects.html#./objects:s136
bitwise-bit-field	(bitwise-bit-field exint1 exint2 exint3)	https://scheme.com/tspl4/objects.html#./objects:s141
bitwise-bit-set?	(bitwise-bit-set? exint1 exint2)	https://scheme.com/tspl4/objects.html#./objects:s139
bitwise-copy-bit	(bitwise-copy-bit exint1 exint2 exint3)	https://scheme.com/tspl4/objects.html#./objects:s140
bitwise-copy-bit-field	(bitwise-copy-bit-field exint1 exint2 exint3 exint4)	https://scheme.com/tspl4/objects.html#./objects:s142
bitwise-first-bit-set	(bitwise-first-bit-set exint)	https://scheme.com/tspl4/objects.html#./objects:s138
bitwise-if	(bitwise-if exint1 exint2 exint3)	https://scheme.com/tspl4/objects.html#./objects:s135
bitwise-ior	(bitwise-ior exint ...)	https://scheme.com/tspl4/objects.html#./objects:s134
bitwise-length	(bitwise-length exint)	https://scheme.com/tspl4/objects.html#./objects:s137
bitwise-not	(bitwise-not exint)	https://scheme.com/tspl4/objects.html#./objects:s134
bitwise-reverse-bit-field	(bitwise-reverse-bit-field exint1 exint2 exint3)	https://scheme.com/tspl4/objects.html#./objects:s146
bitwise-rotate-bit-field	(bitwise-rotate-bit-field exint1 exint2 exint3 exint4)	https://scheme.com/tspl4/objects.html#./objects:s145
bitwise-xor	(bitwise-xor exint ...)	https://scheme.com/tspl4/objects.html#./objects:s134
boolean=?	(boolean=? boolean1 boolean2)	https://scheme.com/tspl4/objects.html#./objects:s271
boolean?	(boolean? obj)	https://scheme.com/tspl4/objects.html#./objects:s14
bound-identifier=?	(bound-identifier=? identifier1 identifier2)	https://scheme.com/tspl4/syntax.html#./syntax:s37
buffer-mode	(buffer-mode symbol)	https://scheme.com/tspl4/io.html#./io:s27
buffer-mode?	(buffer-mode? obj)	https://scheme.com/tspl4/io.html#./io:s28
bytevector->sint-list	(bytevector->sint-list bytevector eness size)	https://scheme.com/tspl4/objects.html#./objects:s260
bytevector->string	(bytevector->string bytevector transcoder)	https://scheme.com/tspl4/io.html#./io:s91
bytevector->u8-list	(bytevector->u8-list bytevector)	https://scheme.com/tspl4/objects.html#./objects:s252
bytevector->uint-list	(bytevector->uint-list bytevector eness size)	https://scheme.com/tspl4/objects.html#./objects:s260
bytevector-copy	(bytevector-copy bytevector)	https://scheme.com/tspl4/objects.html#./objects:s246
bytevector-copy!	(bytevector-copy! src src-start dst dst-start n)	https://scheme.com/tspl4/objects.html#./objects:s247
bytevector-fill!	(bytevector-fill! bytevector fill)	https://scheme.com/tspl4/objects.html#./objects:s245
bytevector-ieee-double-native-ref	(bytevector-ieee-double-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s262
bytevector-ieee-double-native-set!	(bytevector-ieee-double-native-set! bytevector n x)	https://scheme.com/tspl4/objects.html#./objects:s263
bytevector-ieee-double-ref	(bytevector-ieee-double-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s264
bytevector-ieee-double-set!	(bytevector-ieee-double-set! bytevector n x eness)	https://scheme.com/tspl4/objects.html#./objects:s265
bytevector-ieee-single-native-ref	(bytevector-ieee-single-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s262
bytevector-ieee-single-native-set!	(bytevector-ieee-single-native-set! bytevector n x)	https://scheme.com/tspl4/objects.html#./objects:s263
bytevector-ieee-single-ref	(bytevector-ieee-single-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s264
bytevector-ieee-single-set!	(bytevector-ieee-single-set! bytevector n x eness)	https://scheme.com/tspl4/objects.html#./objects:s265
bytevector-length	(bytevector-length bytevector)	https://scheme.com/tspl4/objects.html#./objects:s243
bytevector-s16-native-ref	(bytevector-s16-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s254
bytevector-s16-native-set!	(bytevector-s16-native-set! bytevector n s16)	https://scheme.com/tspl4/objects.html#./objects:s255
bytevector-s16-ref	(bytevector-s16-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s256
bytevector-s16-set!	(bytevector-s16-set! bytevector n s16 eness)	https://scheme.com/tspl4/objects.html#./objects:s257
bytevector-s32-native-ref	(bytevector-s32-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s254
bytevector-s32-native-set!	(bytevector-s32-native-set! bytevector n s32)	https://scheme.com/tspl4/objects.html#./objects:s255
bytevector-s32-ref	(bytevector-s32-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s256
bytevector-s32-set!	(bytevector-s32-set! bytevector n s32 eness)	https://scheme.com/tspl4/objects.html#./objects:s257
bytevector-s64-native-ref	(bytevector-s64-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s254
bytevector-s64-native-set!	(bytevector-s64-native-set! bytevector n s64)	https://scheme.com/tspl4/objects.html#./objects:s255
bytevector-s64-ref	(bytevector-s64-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s256
bytevector-s64-set!	(bytevector-s64-set! bytevector n s64 eness)	https://scheme.com/tspl4/objects.html#./objects:s257
bytevector-s8-ref	(bytevector-s8-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s249
bytevector-s8-set!	(bytevector-s8-set! bytevector n s8)	https://scheme.com/tspl4/objects.html#./objects:s251
bytevector-sint-ref	(bytevector-sint-ref bytevector n eness size)	https://scheme.com/tspl4/objects.html#./objects:s258
bytevector-sint-set!	(bytevector-sint-set! bytevector n sint eness size)	https://scheme.com/tspl4/objects.html#./objects:s259
bytevector-u16-native-ref	(bytevector-u16-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s254
bytevector-u16-native-set!	(bytevector-u16-native-set! bytevector n u16)	https://scheme.com/tspl4/objects.html#./objects:s255
bytevector-u16-ref	(bytevector-u16-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s256
bytevector-u16-set!	(bytevector-u16-set! bytevector n u16 eness)	https://scheme.com/tspl4/objects.html#./objects:s257
bytevector-u32-native-ref	(bytevector-u32-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s254
bytevector-u32-native-set!	(bytevector-u32-native-set! bytevector n u32)	https://scheme.com/tspl4/objects.html#./objects:s255
bytevector-u32-ref	(bytevector-u32-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s256
bytevector-u32-set!	(bytevector-u32-set! bytevector n u32 eness)	https://scheme.com/tspl4/objects.html#./objects:s257
bytevector-u64-native-ref	(bytevector-u64-native-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s254
bytevector-u64-native-set!	(bytevector-u64-native-set! bytevector n u64)	https://scheme.com/tspl4/objects.html#./objects:s255
bytevector-u64-ref	(bytevector-u64-ref bytevector n eness)	https://scheme.com/tspl4/objects.html#./objects:s256
bytevector-u64-set!	(bytevector-u64-set! bytevector n u64 eness)	https://scheme.com/tspl4/objects.html#./objects:s257
bytevector-u8-ref	(bytevector-u8-ref bytevector n)	https://scheme.com/tspl4/objects.html#./objects:s248
bytevector-u8-set!	(bytevector-u8-set! bytevector n u8)	https://scheme.com/tspl4/objects.html#./objects:s250
bytevector-uint-ref	(bytevector-uint-ref bytevector n eness size)	https://scheme.com/tspl4/objects.html#./objects:s258
bytevector-uint-set!	(bytevector-uint-set! bytevector n uint eness size)	https://scheme.com/tspl4/objects.html#./objects:s259
bytevector=?	(bytevector=? bytevector1 bytevector2)	https://scheme.com/tspl4/objects.html#./objects:s244
bytevector?	(bytevector? obj)	https://scheme.com/tspl4/objects.html#./objects:s24
caaaar	(caaaar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caaadr	(caaadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caaar	(caaar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caadar	(caadar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caaddr	(caaddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caadr	(caadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caar	(caar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cadaar	(cadaar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cadadr	(cadadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cadar	(cadar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caddar	(caddar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cadddr	(cadddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
caddr	(caddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cadr	(cadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
call-with-bytevector-output-port	(call-with-bytevector-output-port procedure)~(call-with-bytevector-output-port procedure ?transcoder)	https://scheme.com/tspl4/io.html#./io:s38
call-with-current-continuation	(call-with-current-continuation procedure)	https://scheme.com/tspl4/control.html#./control:s54
call-with-input-file	(call-with-input-file path procedure)	https://scheme.com/tspl4/io.html#./io:s77
call-with-output-file	(call-with-output-file path procedure)	https://scheme.com/tspl4/io.html#./io:s78
call-with-port	(call-with-port port procedure)	https://scheme.com/tspl4/io.html#./io:s51
call-with-string-output-port	(call-with-string-output-port procedure)	https://scheme.com/tspl4/io.html#./io:s39
call-with-values	(call-with-values producer consumer)	https://scheme.com/tspl4/control.html#./control:s71
call/cc	(call/cc procedure)	https://scheme.com/tspl4/control.html#./control:s54
car	(car pair)	https://scheme.com/tspl4/objects.html#./objects:s38
case	(case expr0 clause1 clause2 ...)	https://scheme.com/tspl4/control.html#./control:s18
case-lambda	(case-lambda clause ...)	https://scheme.com/tspl4/binding.html#./binding:s13
cdaaar	(cdaaar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdaadr	(cdaadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdaar	(cdaar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdadar	(cdadar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdaddr	(cdaddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdadr	(cdadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdar	(cdar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cddaar	(cddaar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cddadr	(cddadr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cddar	(cddar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdddar	(cdddar pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cddddr	(cddddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdddr	(cdddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cddr	(cddr pair)	https://scheme.com/tspl4/objects.html#./objects:s42
cdr	(cdr pair)	https://scheme.com/tspl4/objects.html#./objects:s39
ceiling	(ceiling real)	https://scheme.com/tspl4/objects.html#./objects:s103
char->integer	(char->integer char)	https://scheme.com/tspl4/objects.html#./objects:s210
char-alphabetic?	(char-alphabetic? char)	https://scheme.com/tspl4/objects.html#./objects:s203
char-ci<=?	(char-ci<=? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s202
char-ci<?	(char-ci<? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s202
char-ci=?	(char-ci=? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s202
char-ci>=?	(char-ci>=? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s202
char-ci>?	(char-ci>? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s202
char-downcase	(char-downcase char)	https://scheme.com/tspl4/objects.html#./objects:s207
char-foldcase	(char-foldcase char)	https://scheme.com/tspl4/objects.html#./objects:s209
char-general-category	(char-general-category char)	https://scheme.com/tspl4/objects.html#./objects:s205
char-lower-case?	(char-lower-case? char)	https://scheme.com/tspl4/objects.html#./objects:s204
char-numeric?	(char-numeric? char)	https://scheme.com/tspl4/objects.html#./objects:s203
char-title-case?	(char-title-case? char)	https://scheme.com/tspl4/objects.html#./objects:s204
char-titlecase	(char-titlecase char)	https://scheme.com/tspl4/objects.html#./objects:s208
char-upcase	(char-upcase char)	https://scheme.com/tspl4/objects.html#./objects:s206
char-upper-case?	(char-upper-case? char)	https://scheme.com/tspl4/objects.html#./objects:s204
char-whitespace?	(char-whitespace? char)	https://scheme.com/tspl4/objects.html#./objects:s203
char<=?	(char<=? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s201
char<?	(char<? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s201
char=?	(char=? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s201
char>=?	(char>=? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s201
char>?	(char>? char1 char2 char3 ...)	https://scheme.com/tspl4/objects.html#./objects:s201
char?	(char? obj)	https://scheme.com/tspl4/objects.html#./objects:s19
close-input-port	(close-input-port input-port)	https://scheme.com/tspl4/io.html#./io:s88
close-output-port	(close-output-port output-port)	https://scheme.com/tspl4/io.html#./io:s88
close-port	(close-port port)	https://scheme.com/tspl4/io.html#./io:s46
command-line	(command-line)	https://scheme.com/tspl4/libraries.html#./libraries:s17
complex?	(complex? obj)	https://scheme.com/tspl4/objects.html#./objects:s17
cond	(cond clause1 clause2 ...)	https://scheme.com/tspl4/control.html#./control:s13
condition	(condition condition ...)	https://scheme.com/tspl4/exceptions.html#./exceptions:s15
condition-accessor	(condition-accessor rtd procedure)	https://scheme.com/tspl4/exceptions.html#./exceptions:s18
condition-irritants	(condition-irritants condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s25
condition-message	(condition-message condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s24
condition-predicate	(condition-predicate rtd)	https://scheme.com/tspl4/exceptions.html#./exceptions:s18
condition-who	(condition-who condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s26
condition?	(condition? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s14
cons	(cons obj1 obj2)	https://scheme.com/tspl4/objects.html#./objects:s37
cons*	(cons* obj ... final-obj)	https://scheme.com/tspl4/objects.html#./objects:s44
constant	constant	https://scheme.com/tspl4/objects.html#./objects:s1
cos	(cos num)	https://scheme.com/tspl4/objects.html#./objects:s131
current-error-port	(current-error-port)	https://scheme.com/tspl4/io.html#./io:s32
current-input-port	(current-input-port)	https://scheme.com/tspl4/io.html#./io:s32
current-output-port	(current-output-port)	https://scheme.com/tspl4/io.html#./io:s32
datum->syntax	(datum->syntax template-identifier obj)	https://scheme.com/tspl4/syntax.html#./syntax:s45
define	(define var expr)~(define var)~(define (var0 var1 ...) body1 body2 ...)~(define (var0 . varr) body1 body2 ...)~(define (var0 var1 var2 ... . varr) body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s24
define-condition-type	(define-condition-type name parent constructor pred field ...)	https://scheme.com/tspl4/exceptions.html#./exceptions:s17
define-enumeration	(define-enumeration name (symbol ...) constructor)	https://scheme.com/tspl4/objects.html#./objects:s290
define-record-type	(define-record-type record-name clause ...)~(define-record-type (record-name constructor pred) clause ...)	https://scheme.com/tspl4/records.html#./records:s13
define-syntax	(define-syntax keyword expr)	https://scheme.com/tspl4/syntax.html#./syntax:s12
delay	(delay expr)	https://scheme.com/tspl4/control.html#./control:s65
delete-file	(delete-file path)	https://scheme.com/tspl4/io.html#./io:s90
denominator	(denominator rat)	https://scheme.com/tspl4/objects.html#./objects:s119
display	(display obj)~(display obj textual-output-port)	https://scheme.com/tspl4/io.html#./io:s85
div	(div x1 x2)	https://scheme.com/tspl4/objects.html#./objects:s99
div-and-mod	(div-and-mod x1 x2)	https://scheme.com/tspl4/objects.html#./objects:s99
div0	(div0 x1 x2)	https://scheme.com/tspl4/objects.html#./objects:s100
div0-and-mod0	(div0-and-mod0 x1 x2)	https://scheme.com/tspl4/objects.html#./objects:s100
do	(do ((var init update) ...) (test result ...) expr ...)	https://scheme.com/tspl4/control.html#./control:s25
dynamic-wind	(dynamic-wind in body out)	https://scheme.com/tspl4/control.html#./control:s56
else	else	https://scheme.com/tspl4/control.html#./control:s16
endianness	(endianness symbol)	https://scheme.com/tspl4/objects.html#./objects:s240
enum-set->list	(enum-set->list enum-set)	https://scheme.com/tspl4/objects.html#./objects:s294
enum-set-complement	(enum-set-complement enum-set)	https://scheme.com/tspl4/objects.html#./objects:s299
enum-set-constructor	(enum-set-constructor enum-set)	https://scheme.com/tspl4/objects.html#./objects:s292
enum-set-difference	(enum-set-difference enum-set1 enum-set2)	https://scheme.com/tspl4/objects.html#./objects:s298
enum-set-indexer	(enum-set-indexer enum-set)	https://scheme.com/tspl4/objects.html#./objects:s301
enum-set-intersection	(enum-set-intersection enum-set1 enum-set2)	https://scheme.com/tspl4/objects.html#./objects:s298
enum-set-member?	(enum-set-member? symbol enum-set)	https://scheme.com/tspl4/objects.html#./objects:s297
enum-set-projection	(enum-set-projection enum-set1 enum-set2)	https://scheme.com/tspl4/objects.html#./objects:s300
enum-set-subset?	(enum-set-subset? enum-set1 enum-set2)	https://scheme.com/tspl4/objects.html#./objects:s295
enum-set-union	(enum-set-union enum-set1 enum-set2)	https://scheme.com/tspl4/objects.html#./objects:s298
enum-set-universe	(enum-set-universe enum-set)	https://scheme.com/tspl4/objects.html#./objects:s293
enum-set=?	(enum-set=? enum-set1 enum-set2)	https://scheme.com/tspl4/objects.html#./objects:s296
environment	(environment import-spec ...)	https://scheme.com/tspl4/control.html#./control:s81
eof-object	(eof-object)	https://scheme.com/tspl4/io.html#./io:s54
eof-object?	(eof-object? obj)	https://scheme.com/tspl4/io.html#./io:s53
eol-style	(eol-style symbol)	https://scheme.com/tspl4/io.html#./io:s23
eq?	(eq? obj1 obj2)	https://scheme.com/tspl4/objects.html#./objects:s10
equal-hash	(equal-hash obj)	https://scheme.com/tspl4/objects.html#./objects:s279
equal?	(equal? obj1 obj2)	https://scheme.com/tspl4/objects.html#./objects:s13
eqv?	(eqv? obj1 obj2)	https://scheme.com/tspl4/objects.html#./objects:s12
error	(error who msg irritant ...)	https://scheme.com/tspl4/exceptions.html#./exceptions:s4
error-handling-mode	(error-handling-mode symbol)	https://scheme.com/tspl4/io.html#./io:s25
error?	(error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s22
eval	(eval obj environment)	https://scheme.com/tspl4/control.html#./control:s80
even?	(even? int)	https://scheme.com/tspl4/objects.html#./objects:s96
exact	(exact num)	https://scheme.com/tspl4/objects.html#./objects:s114
exact->inexact	(exact->inexact num)	https://scheme.com/tspl4/objects.html#./objects:s116
exact-integer-sqrt	(exact-integer-sqrt n)	https://scheme.com/tspl4/objects.html#./objects:s128
exact?	(exact? num)	https://scheme.com/tspl4/objects.html#./objects:s86
exists	(exists procedure list1 list2 ...)	https://scheme.com/tspl4/control.html#./control:s36
exit	(exit)~(exit obj)	https://scheme.com/tspl4/libraries.html#./libraries:s18
exp	(exp num)	https://scheme.com/tspl4/objects.html#./objects:s129
expt	(expt num1 num2)	https://scheme.com/tspl4/objects.html#./objects:s111
fields	fields	https://scheme.com/tspl4/records.html#./records:s16
file-exists?	(file-exists? path)	https://scheme.com/tspl4/io.html#./io:s89
file-options	(file-options symbol ...)	https://scheme.com/tspl4/io.html#./io:s26
filter	(filter procedure list)	https://scheme.com/tspl4/objects.html#./objects:s55
find	(find procedure list)	https://scheme.com/tspl4/objects.html#./objects:s57
finite?	(finite? real)	https://scheme.com/tspl4/objects.html#./objects:s97
fixnum->flonum	(fixnum->flonum fx)	https://scheme.com/tspl4/objects.html#./objects:s198
fixnum-width	(fixnum-width)	https://scheme.com/tspl4/objects.html#./objects:s152
fixnum?	(fixnum? obj)	https://scheme.com/tspl4/objects.html#./objects:s150
fl*	(fl* fl ...)	https://scheme.com/tspl4/objects.html#./objects:s186
fl+	(fl+ fl ...)	https://scheme.com/tspl4/objects.html#./objects:s184
fl-	(fl- fl)~(fl- fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s185
fl/	(fl/ fl)~(fl/ fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s187
fl<=?	(fl<=? fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s178
fl<?	(fl<? fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s178
fl=?	(fl=? fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s178
fl>=?	(fl>=? fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s178
fl>?	(fl>? fl1 fl2 fl3 ...)	https://scheme.com/tspl4/objects.html#./objects:s178
flabs	(flabs fl)	https://scheme.com/tspl4/objects.html#./objects:s192
flacos	(flacos fl)	https://scheme.com/tspl4/objects.html#./objects:s195
flasin	(flasin fl)	https://scheme.com/tspl4/objects.html#./objects:s195
flatan	(flatan fl)~(flatan fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s195
flceiling	(flceiling fl)	https://scheme.com/tspl4/objects.html#./objects:s190
flcos	(flcos fl)	https://scheme.com/tspl4/objects.html#./objects:s194
fldenominator	(fldenominator fl)	https://scheme.com/tspl4/objects.html#./objects:s191
fldiv	(fldiv fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s188
fldiv-and-mod	(fldiv-and-mod fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s188
fldiv0	(fldiv0 fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s189
fldiv0-and-mod0	(fldiv0-and-mod0 fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s189
fleven?	(fleven? fl-int)	https://scheme.com/tspl4/objects.html#./objects:s182
flexp	(flexp fl)	https://scheme.com/tspl4/objects.html#./objects:s193
flexpt	(flexpt fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s197
flfinite?	(flfinite? fl)	https://scheme.com/tspl4/objects.html#./objects:s181
flfloor	(flfloor fl)	https://scheme.com/tspl4/objects.html#./objects:s190
flinfinite?	(flinfinite? fl)	https://scheme.com/tspl4/objects.html#./objects:s181
flinteger?	(flinteger? fl)	https://scheme.com/tspl4/objects.html#./objects:s180
fllog	(fllog fl)~(fllog fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s193
flmax	(flmax fl1 fl2 ...)	https://scheme.com/tspl4/objects.html#./objects:s183
flmin	(flmin fl1 fl2 ...)	https://scheme.com/tspl4/objects.html#./objects:s183
flmod	(flmod fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s188
flmod0	(flmod0 fl1 fl2)	https://scheme.com/tspl4/objects.html#./objects:s189
flnan?	(flnan? fl)	https://scheme.com/tspl4/objects.html#./objects:s181
flnegative?	(flnegative? fl)	https://scheme.com/tspl4/objects.html#./objects:s179
flnumerator	(flnumerator fl)	https://scheme.com/tspl4/objects.html#./objects:s191
flodd?	(flodd? fl-int)	https://scheme.com/tspl4/objects.html#./objects:s182
flonum?	(flonum? obj)	https://scheme.com/tspl4/objects.html#./objects:s177
floor	(floor real)	https://scheme.com/tspl4/objects.html#./objects:s102
flpositive?	(flpositive? fl)	https://scheme.com/tspl4/objects.html#./objects:s179
flround	(flround fl)	https://scheme.com/tspl4/objects.html#./objects:s190
flsin	(flsin fl)	https://scheme.com/tspl4/objects.html#./objects:s194
flsqrt	(flsqrt fl)	https://scheme.com/tspl4/objects.html#./objects:s196
fltan	(fltan fl)	https://scheme.com/tspl4/objects.html#./objects:s194
fltruncate	(fltruncate fl)	https://scheme.com/tspl4/objects.html#./objects:s190
flush-output-port	(flush-output-port output-port)	https://scheme.com/tspl4/io.html#./io:s74
flzero?	(flzero? fl)	https://scheme.com/tspl4/objects.html#./objects:s179
fold-left	(fold-left procedure obj list1 list2 ...)	https://scheme.com/tspl4/control.html#./control:s38
fold-right	(fold-right procedure obj list1 list2 ...)	https://scheme.com/tspl4/control.html#./control:s41
for-all	(for-all procedure list1 list2 ...)	https://scheme.com/tspl4/control.html#./control:s37
for-each	(for-each procedure list1 list2 ...)	https://scheme.com/tspl4/control.html#./control:s33
force	(force promise)	https://scheme.com/tspl4/control.html#./control:s65
free-identifier=?	(free-identifier=? identifier1 identifier2)	https://scheme.com/tspl4/syntax.html#./syntax:s37
fx*	(fx* fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s159
fx*/carry	(fx*/carry fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s162
fx+	(fx+ fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s157
fx+/carry	(fx+/carry fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s162
fx-	(fx- fx)~(fx- fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s158
fx-/carry	(fx-/carry fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s162
fx<=?	(fx<=? fx1 fx2 fx3 ...)	https://scheme.com/tspl4/objects.html#./objects:s153
fx<?	(fx<? fx1 fx2 fx3 ...)	https://scheme.com/tspl4/objects.html#./objects:s153
fx=?	(fx=? fx1 fx2 fx3 ...)	https://scheme.com/tspl4/objects.html#./objects:s153
fx>=?	(fx>=? fx1 fx2 fx3 ...)	https://scheme.com/tspl4/objects.html#./objects:s153
fx>?	(fx>? fx1 fx2 fx3 ...)	https://scheme.com/tspl4/objects.html#./objects:s153
fxand	(fxand fx ...)	https://scheme.com/tspl4/objects.html#./objects:s163
fxarithmetic-shift	(fxarithmetic-shift fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s173
fxarithmetic-shift-left	(fxarithmetic-shift-left fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s172
fxarithmetic-shift-right	(fxarithmetic-shift-right fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s172
fxbit-count	(fxbit-count fx)	https://scheme.com/tspl4/objects.html#./objects:s165
fxbit-field	(fxbit-field fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s170
fxbit-set?	(fxbit-set? fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s168
fxcopy-bit	(fxcopy-bit fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s169
fxcopy-bit-field	(fxcopy-bit-field fx1 fx2 fx3 fx4)	https://scheme.com/tspl4/objects.html#./objects:s171
fxdiv	(fxdiv fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s160
fxdiv-and-mod	(fxdiv-and-mod fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s160
fxdiv0	(fxdiv0 fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s161
fxdiv0-and-mod0	(fxdiv0-and-mod0 fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s161
fxeven?	(fxeven? fx)	https://scheme.com/tspl4/objects.html#./objects:s155
fxfirst-bit-set	(fxfirst-bit-set fx)	https://scheme.com/tspl4/objects.html#./objects:s167
fxif	(fxif fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s164
fxior	(fxior fx ...)	https://scheme.com/tspl4/objects.html#./objects:s163
fxlength	(fxlength fx)	https://scheme.com/tspl4/objects.html#./objects:s166
fxmax	(fxmax fx1 fx2 ...)	https://scheme.com/tspl4/objects.html#./objects:s156
fxmin	(fxmin fx1 fx2 ...)	https://scheme.com/tspl4/objects.html#./objects:s156
fxmod	(fxmod fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s160
fxmod0	(fxmod0 fx1 fx2)	https://scheme.com/tspl4/objects.html#./objects:s161
fxnegative?	(fxnegative? fx)	https://scheme.com/tspl4/objects.html#./objects:s154
fxnot	(fxnot fx)	https://scheme.com/tspl4/objects.html#./objects:s163
fxodd?	(fxodd? fx)	https://scheme.com/tspl4/objects.html#./objects:s155
fxpositive?	(fxpositive? fx)	https://scheme.com/tspl4/objects.html#./objects:s154
fxreverse-bit-field	(fxreverse-bit-field fx1 fx2 fx3)	https://scheme.com/tspl4/objects.html#./objects:s175
fxrotate-bit-field	(fxrotate-bit-field fx1 fx2 fx3 fx4)	https://scheme.com/tspl4/objects.html#./objects:s174
fxxor	(fxxor fx ...)	https://scheme.com/tspl4/objects.html#./objects:s163
fxzero?	(fxzero? fx)	https://scheme.com/tspl4/objects.html#./objects:s154
gcd	(gcd int ...)	https://scheme.com/tspl4/objects.html#./objects:s109
generate-temporaries	(generate-temporaries list)	https://scheme.com/tspl4/syntax.html#./syntax:s49
get-bytevector-all	(get-bytevector-all binary-input-port)	https://scheme.com/tspl4/io.html#./io:s60
get-bytevector-n	(get-bytevector-n binary-input-port n)	https://scheme.com/tspl4/io.html#./io:s57
get-bytevector-n!	(get-bytevector-n! binary-input-port bytevector start n)	https://scheme.com/tspl4/io.html#./io:s58
get-bytevector-some	(get-bytevector-some binary-input-port)	https://scheme.com/tspl4/io.html#./io:s59
get-char	(get-char textual-input-port)	https://scheme.com/tspl4/io.html#./io:s61
get-datum	(get-datum textual-input-port)	https://scheme.com/tspl4/io.html#./io:s67
get-line	(get-line textual-input-port)	https://scheme.com/tspl4/io.html#./io:s66
get-string-all	(get-string-all textual-input-port)	https://scheme.com/tspl4/io.html#./io:s65
get-string-n	(get-string-n textual-input-port n)	https://scheme.com/tspl4/io.html#./io:s63
get-string-n!	(get-string-n! textual-input-port string start n)	https://scheme.com/tspl4/io.html#./io:s64
get-u8	(get-u8 binary-input-port)	https://scheme.com/tspl4/io.html#./io:s55
greatest-fixnum	(greatest-fixnum)	https://scheme.com/tspl4/objects.html#./objects:s151
guard	(guard (var clause1 clause2 ...) b1 b2 ...)	https://scheme.com/tspl4/exceptions.html#./exceptions:s8
hashtable-clear!	(hashtable-clear! hashtable)~(hashtable-clear! hashtable size)	https://scheme.com/tspl4/objects.html#./objects:s287
hashtable-contains?	(hashtable-contains? hashtable key)	https://scheme.com/tspl4/objects.html#./objects:s282
hashtable-copy	(hashtable-copy hashtable)~(hashtable-copy hashtable mutable?)	https://scheme.com/tspl4/objects.html#./objects:s286
hashtable-delete!	(hashtable-delete! hashtable key)	https://scheme.com/tspl4/objects.html#./objects:s284
hashtable-entries	(hashtable-entries hashtable)	https://scheme.com/tspl4/objects.html#./objects:s289
hashtable-equivalence-function	(hashtable-equivalence-function hashtable)	https://scheme.com/tspl4/objects.html#./objects:s278
hashtable-hash-function	(hashtable-hash-function hashtable)	https://scheme.com/tspl4/objects.html#./objects:s278
hashtable-keys	(hashtable-keys hashtable)	https://scheme.com/tspl4/objects.html#./objects:s288
hashtable-mutable?	(hashtable-mutable? hashtable)	https://scheme.com/tspl4/objects.html#./objects:s277
hashtable-ref	(hashtable-ref hashtable key default)	https://scheme.com/tspl4/objects.html#./objects:s281
hashtable-set!	(hashtable-set! hashtable key obj)	https://scheme.com/tspl4/objects.html#./objects:s280
hashtable-size	(hashtable-size hashtable)	https://scheme.com/tspl4/objects.html#./objects:s285
hashtable-update!	(hashtable-update! hashtable key procedure default)	https://scheme.com/tspl4/objects.html#./objects:s283
hashtable?	(hashtable? obj)	https://scheme.com/tspl4/objects.html#./objects:s25
i/o-decoding-error?	(i/o-decoding-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s42
i/o-encoding-error-char	(i/o-encoding-error-char condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s43
i/o-encoding-error?	(i/o-encoding-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s43
i/o-error-filename	(i/o-error-filename condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s36
i/o-error-port	(i/o-error-port condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s41
i/o-error-position	(i/o-error-position condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s35
i/o-error?	(i/o-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s32
i/o-file-already-exists-error?	(i/o-file-already-exists-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s39
i/o-file-does-not-exist-error?	(i/o-file-does-not-exist-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s40
i/o-file-is-read-only-error?	(i/o-file-is-read-only-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s38
i/o-file-protection-error?	(i/o-file-protection-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s37
i/o-filename-error?	(i/o-filename-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s36
i/o-invalid-position-error?	(i/o-invalid-position-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s35
i/o-port-error?	(i/o-port-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s41
i/o-read-error?	(i/o-read-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s33
i/o-write-error?	(i/o-write-error? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s34
identifier-syntax	(identifier-syntax tmpl)~(identifier-syntax (id1 tmpl1) ((set! id2 e2) tmpl2))	https://scheme.com/tspl4/syntax.html#./syntax:s27
identifier?	(identifier? obj)	https://scheme.com/tspl4/syntax.html#./syntax:s35
if	(if test consequent alternative)~(if test consequent)	https://scheme.com/tspl4/control.html#./control:s8
imag-part	(imag-part num)	https://scheme.com/tspl4/objects.html#./objects:s121
immutable	immutable	https://scheme.com/tspl4/records.html#./records:s16
implementation-restriction-violation?	(implementation-restriction-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s28
inexact	(inexact num)	https://scheme.com/tspl4/objects.html#./objects:s112
inexact->exact	(inexact->exact num)	https://scheme.com/tspl4/objects.html#./objects:s116
inexact?	(inexact? num)	https://scheme.com/tspl4/objects.html#./objects:s87
infinite?	(infinite? real)	https://scheme.com/tspl4/objects.html#./objects:s97
input-port?	(input-port? obj)	https://scheme.com/tspl4/io.html#./io:s44
integer->char	(integer->char n)	https://scheme.com/tspl4/objects.html#./objects:s211
integer-valued?	(integer-valued? obj)	https://scheme.com/tspl4/objects.html#./objects:s18
integer?	(integer? obj)	https://scheme.com/tspl4/objects.html#./objects:s17
irritants-condition?	(irritants-condition? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s25
lambda	(lambda formals body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s3
latin-1-codec	(latin-1-codec)	https://scheme.com/tspl4/io.html#./io:s22
lcm	(lcm int ...)	https://scheme.com/tspl4/objects.html#./objects:s110
least-fixnum	(least-fixnum)	https://scheme.com/tspl4/objects.html#./objects:s151
length	(length list)	https://scheme.com/tspl4/objects.html#./objects:s46
let*	(let* ((var expr) ...) body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s18
let*-values	(let*-values ((formals expr) ...) body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s23
let-syntax	(let-syntax ((keyword expr) ...) form1 form2 ...)	https://scheme.com/tspl4/syntax.html#./syntax:s13
let-values	(let-values ((formals expr) ...) body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s23
letrec	(letrec ((var expr) ...) body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s20
letrec*	(letrec* ((var expr) ...) body1 body2 ...)	https://scheme.com/tspl4/binding.html#./binding:s22
letrec-syntax	(letrec-syntax ((keyword expr) ...) form1 form2 ...)	https://scheme.com/tspl4/syntax.html#./syntax:s13
lexical-violation?	(lexical-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s29
list	(list obj ...)	https://scheme.com/tspl4/objects.html#./objects:s43
list->string	(list->string list)	https://scheme.com/tspl4/objects.html#./objects:s229
list->vector	(list->vector list)	https://scheme.com/tspl4/objects.html#./objects:s238
list-ref	(list-ref list n)	https://scheme.com/tspl4/objects.html#./objects:s47
list-sort	(list-sort predicate list)	https://scheme.com/tspl4/objects.html#./objects:s62
list-tail	(list-tail list n)	https://scheme.com/tspl4/objects.html#./objects:s48
list?	(list? obj)	https://scheme.com/tspl4/objects.html#./objects:s45
log	(log num)~(log num1 num2)	https://scheme.com/tspl4/objects.html#./objects:s130
lookahead-char	(lookahead-char textual-input-port)	https://scheme.com/tspl4/io.html#./io:s62
lookahead-u8	(lookahead-u8 binary-input-port)	https://scheme.com/tspl4/io.html#./io:s56
magnitude	(magnitude num)	https://scheme.com/tspl4/objects.html#./objects:s125
make-assertion-violation	(make-assertion-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s21
make-bytevector	(make-bytevector n)~(make-bytevector n fill)	https://scheme.com/tspl4/objects.html#./objects:s242
make-custom-binary-input-port	(make-custom-binary-input-port id r! gp sp! close)	https://scheme.com/tspl4/io.html#./io:s41
make-custom-binary-input/output-port	(make-custom-binary-input/output-port id r! w! gp sp! close)	https://scheme.com/tspl4/io.html#./io:s41
make-custom-binary-output-port	(make-custom-binary-output-port id w! gp sp! close)	https://scheme.com/tspl4/io.html#./io:s41
make-custom-textual-input-port	(make-custom-textual-input-port id r! gp sp! close)	https://scheme.com/tspl4/io.html#./io:s42
make-custom-textual-input/output-port	(make-custom-textual-input/output-port id r! w! gp sp! close)	https://scheme.com/tspl4/io.html#./io:s42
make-custom-textual-output-port	(make-custom-textual-output-port id w! gp sp! close)	https://scheme.com/tspl4/io.html#./io:s42
make-enumeration	(make-enumeration symbol-list)	https://scheme.com/tspl4/objects.html#./objects:s291
make-eq-hashtable	(make-eq-hashtable)~(make-eq-hashtable size)	https://scheme.com/tspl4/objects.html#./objects:s274
make-eqv-hashtable	(make-eqv-hashtable)~(make-eqv-hashtable size)	https://scheme.com/tspl4/objects.html#./objects:s275
make-error	(make-error)	https://scheme.com/tspl4/exceptions.html#./exceptions:s22
make-hashtable	(make-hashtable hash equiv?)~(make-hashtable hash equiv? size)	https://scheme.com/tspl4/objects.html#./objects:s276
make-i/o-decoding-error	(make-i/o-decoding-error pobj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s42
make-i/o-encoding-error	(make-i/o-encoding-error pobj cobj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s43
make-i/o-error	(make-i/o-error)	https://scheme.com/tspl4/exceptions.html#./exceptions:s32
make-i/o-file-already-exists-error	(make-i/o-file-already-exists-error filename)	https://scheme.com/tspl4/exceptions.html#./exceptions:s39
make-i/o-file-does-not-exist-error	(make-i/o-file-does-not-exist-error filename)	https://scheme.com/tspl4/exceptions.html#./exceptions:s40
make-i/o-file-is-read-only-error	(make-i/o-file-is-read-only-error filename)	https://scheme.com/tspl4/exceptions.html#./exceptions:s38
make-i/o-file-protection-error	(make-i/o-file-protection-error filename)	https://scheme.com/tspl4/exceptions.html#./exceptions:s37
make-i/o-filename-error	(make-i/o-filename-error filename)	https://scheme.com/tspl4/exceptions.html#./exceptions:s36
make-i/o-invalid-position-error	(make-i/o-invalid-position-error position)	https://scheme.com/tspl4/exceptions.html#./exceptions:s35
make-i/o-port-error	(make-i/o-port-error pobj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s41
make-i/o-read-error	(make-i/o-read-error)	https://scheme.com/tspl4/exceptions.html#./exceptions:s33
make-i/o-write-error	(make-i/o-write-error)	https://scheme.com/tspl4/exceptions.html#./exceptions:s34
make-implementation-restriction-violation	(make-implementation-restriction-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s28
make-irritants-condition	(make-irritants-condition irritants)	https://scheme.com/tspl4/exceptions.html#./exceptions:s25
make-lexical-violation	(make-lexical-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s29
make-message-condition	(make-message-condition message)	https://scheme.com/tspl4/exceptions.html#./exceptions:s24
make-no-infinities-violation	(make-no-infinities-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s44
make-no-nans-violation	(make-no-nans-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s45
make-non-continuable-violation	(make-non-continuable-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s27
make-polar	(make-polar real1 real2)	https://scheme.com/tspl4/objects.html#./objects:s123
make-record-constructor-descriptor	(make-record-constructor-descriptor rtd parent-rcd protocol)	https://scheme.com/tspl4/records.html#./records:s24
make-record-type-descriptor	(make-record-type-descriptor name parent uid s? o? fields)	https://scheme.com/tspl4/records.html#./records:s20
make-rectangular	(make-rectangular real1 real2)	https://scheme.com/tspl4/objects.html#./objects:s122
make-serious-condition	(make-serious-condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s19
make-string	(make-string n)~(make-string n char)	https://scheme.com/tspl4/objects.html#./objects:s218
make-syntax-violation	(make-syntax-violation form subform)	https://scheme.com/tspl4/exceptions.html#./exceptions:s30
make-transcoder	(make-transcoder codec)~(make-transcoder codec eol-style)~(make-transcoder codec eol-style error-handling-mode)	https://scheme.com/tspl4/io.html#./io:s19
make-undefined-violation	(make-undefined-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s31
make-variable-transformer	(make-variable-transformer procedure)	https://scheme.com/tspl4/syntax.html#./syntax:s42
make-vector	(make-vector n)~(make-vector n obj)	https://scheme.com/tspl4/objects.html#./objects:s232
make-violation	(make-violation)	https://scheme.com/tspl4/exceptions.html#./exceptions:s20
make-warning	(make-warning)	https://scheme.com/tspl4/exceptions.html#./exceptions:s23
make-who-condition	(make-who-condition who)	https://scheme.com/tspl4/exceptions.html#./exceptions:s26
map	(map procedure list1 list2 ...)	https://scheme.com/tspl4/control.html#./control:s30
max	(max real1 real2 ...)	https://scheme.com/tspl4/objects.html#./objects:s107
member	(member obj list)	https://scheme.com/tspl4/objects.html#./objects:s51
memp	(memp procedure list)	https://scheme.com/tspl4/objects.html#./objects:s52
memq	(memq obj list)	https://scheme.com/tspl4/objects.html#./objects:s51
memv	(memv obj list)	https://scheme.com/tspl4/objects.html#./objects:s51
message-condition?	(message-condition? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s24
min	(min real1 real2 ...)	https://scheme.com/tspl4/objects.html#./objects:s108
mod	(mod x1 x2)	https://scheme.com/tspl4/objects.html#./objects:s99
mod0	(mod0 x1 x2)	https://scheme.com/tspl4/objects.html#./objects:s100
modulo	(modulo int1 int2)	https://scheme.com/tspl4/objects.html#./objects:s98
mutable	mutable	https://scheme.com/tspl4/records.html#./records:s16
nan?	(nan? real)	https://scheme.com/tspl4/objects.html#./objects:s97
native-endianness	(native-endianness)	https://scheme.com/tspl4/objects.html#./objects:s241
native-eol-style	(native-eol-style)	https://scheme.com/tspl4/io.html#./io:s24
native-transcoder	(native-transcoder)	https://scheme.com/tspl4/io.html#./io:s21
negative?	(negative? real)	https://scheme.com/tspl4/objects.html#./objects:s95
newline	(newline)~(newline textual-output-port)	https://scheme.com/tspl4/io.html#./io:s87
no-infinities-violation?	(no-infinities-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s44
no-nans-violation?	(no-nans-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s45
non-continuable-violation?	(non-continuable-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s27
nongenerative	nongenerative	https://scheme.com/tspl4/records.html#./records:s16
not	(not obj)	https://scheme.com/tspl4/control.html#./control:s10
null-environment	(null-environment version)	https://scheme.com/tspl4/control.html#./control:s82
null?	(null? obj)	https://scheme.com/tspl4/objects.html#./objects:s15
number->string	(number->string num)~(number->string num radix)~(number->string num radix precision)	https://scheme.com/tspl4/objects.html#./objects:s148
number?	(number? obj)	https://scheme.com/tspl4/objects.html#./objects:s17
numerator	(numerator rat)	https://scheme.com/tspl4/objects.html#./objects:s118
odd?	(odd? int)	https://scheme.com/tspl4/objects.html#./objects:s96
opaque	opaque	https://scheme.com/tspl4/records.html#./records:s16
open-bytevector-input-port	(open-bytevector-input-port bytevector)~(open-bytevector-input-port bytevector ?transcoder)	https://scheme.com/tspl4/io.html#./io:s34
open-bytevector-output-port	(open-bytevector-output-port)~(open-bytevector-output-port ?transcoder)	https://scheme.com/tspl4/io.html#./io:s36
open-file-input-port	(open-file-input-port path)~(open-file-input-port path options)~(open-file-input-port path options b-mode)~(open-file-input-port path options b-mode ?transcoder)	https://scheme.com/tspl4/io.html#./io:s29
open-file-input/output-port	(open-file-input/output-port path)~(open-file-input/output-port path options)~(open-file-input/output-port path options b-mode)~(open-file-input/output-port path options b-mode ?transcoder)	https://scheme.com/tspl4/io.html#./io:s31
open-file-output-port	(open-file-output-port path)~(open-file-output-port path options)~(open-file-output-port path options b-mode)~(open-file-output-port path options b-mode ?transcoder)	https://scheme.com/tspl4/io.html#./io:s30
open-input-file	(open-input-file path)	https://scheme.com/tspl4/io.html#./io:s75
open-output-file	(open-output-file path)	https://scheme.com/tspl4/io.html#./io:s76
open-string-input-port	(open-string-input-port string)	https://scheme.com/tspl4/io.html#./io:s35
open-string-output-port	(open-string-output-port)	https://scheme.com/tspl4/io.html#./io:s37
or	(or expr ...)	https://scheme.com/tspl4/control.html#./control:s12
output-port-buffer-mode	(output-port-buffer-mode port)	https://scheme.com/tspl4/io.html#./io:s52
output-port?	(output-port? obj)	https://scheme.com/tspl4/io.html#./io:s44
pair?	(pair? obj)	https://scheme.com/tspl4/objects.html#./objects:s16
parent	parent	https://scheme.com/tspl4/records.html#./records:s16
parent-rtd	parent-rtd	https://scheme.com/tspl4/records.html#./records:s16
partition	(partition procedure list)	https://scheme.com/tspl4/objects.html#./objects:s56
peek-char	(peek-char)~(peek-char textual-input-port)	https://scheme.com/tspl4/io.html#./io:s83
port-eof?	(port-eof? input-port)	https://scheme.com/tspl4/io.html#./io:s68
port-has-port-position?	(port-has-port-position? port)	https://scheme.com/tspl4/io.html#./io:s49
port-has-set-port-position!?	(port-has-set-port-position!? port)	https://scheme.com/tspl4/io.html#./io:s50
port-position	(port-position port)	https://scheme.com/tspl4/io.html#./io:s49
port-transcoder	(port-transcoder port)	https://scheme.com/tspl4/io.html#./io:s48
port?	(port? obj)	https://scheme.com/tspl4/io.html#./io:s43
positive?	(positive? real)	https://scheme.com/tspl4/objects.html#./objects:s94
expr0	(expr0 expr1 ...)	https://scheme.com/tspl4/control.html#./control:s1
procedure?	(procedure? obj)	https://scheme.com/tspl4/objects.html#./objects:s23
protocol	protocol	https://scheme.com/tspl4/records.html#./records:s16
put-bytevector	(put-bytevector binary-output-port bytevector)~(put-bytevector binary-output-port bytevector start)~(put-bytevector binary-output-port bytevector start n)	https://scheme.com/tspl4/io.html#./io:s70
put-char	(put-char textual-output-port char)	https://scheme.com/tspl4/io.html#./io:s71
put-datum	(put-datum textual-output-port obj)	https://scheme.com/tspl4/io.html#./io:s73
put-string	(put-string textual-output-port string)~(put-string textual-output-port string start)~(put-string textual-output-port string start n)	https://scheme.com/tspl4/io.html#./io:s72
put-u8	(put-u8 binary-output-port octet)	https://scheme.com/tspl4/io.html#./io:s69
quasiquote	(quasiquote obj ...)	https://scheme.com/tspl4/objects.html#./objects:s5
quasisyntax	(quasisyntax template ...)	https://scheme.com/tspl4/syntax.html#./syntax:s40
quote	(quote obj)	https://scheme.com/tspl4/objects.html#./objects:s2
quotient	(quotient int1 int2)	https://scheme.com/tspl4/objects.html#./objects:s98
raise	(raise obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s3
raise-continuable	(raise-continuable obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s3
rational-valued?	(rational-valued? obj)	https://scheme.com/tspl4/objects.html#./objects:s18
rational?	(rational? obj)	https://scheme.com/tspl4/objects.html#./objects:s17
rationalize	(rationalize real1 real2)	https://scheme.com/tspl4/objects.html#./objects:s117
read	(read)~(read textual-input-port)	https://scheme.com/tspl4/io.html#./io:s81
read-char	(read-char)~(read-char textual-input-port)	https://scheme.com/tspl4/io.html#./io:s82
real->flonum	(real->flonum real)	https://scheme.com/tspl4/objects.html#./objects:s198
real-part	(real-part num)	https://scheme.com/tspl4/objects.html#./objects:s120
real-valued?	(real-valued? obj)	https://scheme.com/tspl4/objects.html#./objects:s18
real?	(real? obj)	https://scheme.com/tspl4/objects.html#./objects:s17
record-accessor	(record-accessor rtd idx)	https://scheme.com/tspl4/records.html#./records:s31
record-constructor	(record-constructor rcd)	https://scheme.com/tspl4/records.html#./records:s29
record-constructor-descriptor	(record-constructor-descriptor record-name)	https://scheme.com/tspl4/records.html#./records:s28
record-field-mutable?	(record-field-mutable? rtd idx)	https://scheme.com/tspl4/records.html#./records:s39
record-mutator	(record-mutator rtd idx)	https://scheme.com/tspl4/records.html#./records:s32
record-predicate	(record-predicate rtd)	https://scheme.com/tspl4/records.html#./records:s30
record-rtd	(record-rtd record)	https://scheme.com/tspl4/records.html#./records:s41
record-type-descriptor	(record-type-descriptor record-name)	https://scheme.com/tspl4/records.html#./records:s28
record-type-descriptor?	(record-type-descriptor? obj)	https://scheme.com/tspl4/records.html#./records:s23
record-type-field-names	(record-type-field-names rtd)	https://scheme.com/tspl4/records.html#./records:s38
record-type-generative?	(record-type-generative? rtd)	https://scheme.com/tspl4/records.html#./records:s37
record-type-name	(record-type-name rtd)	https://scheme.com/tspl4/records.html#./records:s34
record-type-opaque?	(record-type-opaque? rtd)	https://scheme.com/tspl4/records.html#./records:s37
record-type-parent	(record-type-parent rtd)	https://scheme.com/tspl4/records.html#./records:s35
record-type-sealed?	(record-type-sealed? rtd)	https://scheme.com/tspl4/records.html#./records:s37
record-type-uid	(record-type-uid rtd)	https://scheme.com/tspl4/records.html#./records:s36
record?	(record? obj)	https://scheme.com/tspl4/records.html#./records:s40
remainder	(remainder int1 int2)	https://scheme.com/tspl4/objects.html#./objects:s98
remove	(remove obj list)	https://scheme.com/tspl4/objects.html#./objects:s53
remp	(remp procedure list)	https://scheme.com/tspl4/objects.html#./objects:s54
remq	(remq obj list)	https://scheme.com/tspl4/objects.html#./objects:s53
remv	(remv obj list)	https://scheme.com/tspl4/objects.html#./objects:s53
reverse	(reverse list)	https://scheme.com/tspl4/objects.html#./objects:s50
round	(round real)	https://scheme.com/tspl4/objects.html#./objects:s104
scheme-report-environment	(scheme-report-environment version)	https://scheme.com/tspl4/control.html#./control:s82
sealed	sealed	https://scheme.com/tspl4/records.html#./records:s16
serious-condition?	(serious-condition? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s19
set!	(set! var expr)	https://scheme.com/tspl4/binding.html#./binding:s28
set-car!	(set-car! pair obj)	https://scheme.com/tspl4/objects.html#./objects:s40
set-cdr!	(set-cdr! pair obj)	https://scheme.com/tspl4/objects.html#./objects:s41
set-port-position!	(set-port-position! port pos)	https://scheme.com/tspl4/io.html#./io:s50
simple-conditions	(simple-conditions condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s16
sin	(sin num)	https://scheme.com/tspl4/objects.html#./objects:s131
sint-list->bytevector	(sint-list->bytevector list eness size)	https://scheme.com/tspl4/objects.html#./objects:s261
sqrt	(sqrt num)	https://scheme.com/tspl4/objects.html#./objects:s127
standard-error-port	(standard-error-port)	https://scheme.com/tspl4/io.html#./io:s33
standard-input-port	(standard-input-port)	https://scheme.com/tspl4/io.html#./io:s33
standard-output-port	(standard-output-port)	https://scheme.com/tspl4/io.html#./io:s33
string	(string char ...)	https://scheme.com/tspl4/objects.html#./objects:s217
string->bytevector	(string->bytevector string transcoder)	https://scheme.com/tspl4/io.html#./io:s92
string->list	(string->list string)	https://scheme.com/tspl4/objects.html#./objects:s228
string->number	(string->number string)~(string->number string radix)	https://scheme.com/tspl4/objects.html#./objects:s147
string->symbol	(string->symbol string)	https://scheme.com/tspl4/objects.html#./objects:s269
string->utf16	(string->utf16 string)~(string->utf16 string endianness)	https://scheme.com/tspl4/io.html#./io:s94
string->utf32	(string->utf32 string)~(string->utf32 string endianness)	https://scheme.com/tspl4/io.html#./io:s94
string->utf8	(string->utf8 string)	https://scheme.com/tspl4/io.html#./io:s93
string-append	(string-append string ...)	https://scheme.com/tspl4/objects.html#./objects:s223
string-ci-hash	(string-ci-hash string)	https://scheme.com/tspl4/objects.html#./objects:s279
string-ci<=?	(string-ci<=? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s216
string-ci<?	(string-ci<? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s216
string-ci=?	(string-ci=? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s216
string-ci>=?	(string-ci>=? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s216
string-ci>?	(string-ci>? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s216
string-copy	(string-copy string)	https://scheme.com/tspl4/objects.html#./objects:s222
string-downcase	(string-downcase string)	https://scheme.com/tspl4/objects.html#./objects:s226
string-fill!	(string-fill! string char)	https://scheme.com/tspl4/objects.html#./objects:s225
string-foldcase	(string-foldcase string)	https://scheme.com/tspl4/objects.html#./objects:s226
string-for-each	(string-for-each procedure string1 string2 ...)	https://scheme.com/tspl4/control.html#./control:s50
string-hash	(string-hash string)	https://scheme.com/tspl4/objects.html#./objects:s279
string-length	(string-length string)	https://scheme.com/tspl4/objects.html#./objects:s219
string-normalize-nfc	(string-normalize-nfc string)	https://scheme.com/tspl4/objects.html#./objects:s227
string-normalize-nfd	(string-normalize-nfd string)	https://scheme.com/tspl4/objects.html#./objects:s227
string-normalize-nfkc	(string-normalize-nfkc string)	https://scheme.com/tspl4/objects.html#./objects:s227
string-normalize-nfkd	(string-normalize-nfkd string)	https://scheme.com/tspl4/objects.html#./objects:s227
string-ref	(string-ref string n)	https://scheme.com/tspl4/objects.html#./objects:s220
string-set!	(string-set! string n char)	https://scheme.com/tspl4/objects.html#./objects:s221
string-titlecase	(string-titlecase string)	https://scheme.com/tspl4/objects.html#./objects:s226
string-upcase	(string-upcase string)	https://scheme.com/tspl4/objects.html#./objects:s226
string<=?	(string<=? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s215
string<?	(string<? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s215
string=?	(string=? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s215
string>=?	(string>=? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s215
string>?	(string>? string1 string2 string3 ...)	https://scheme.com/tspl4/objects.html#./objects:s215
string?	(string? obj)	https://scheme.com/tspl4/objects.html#./objects:s20
substring	(substring string start end)	https://scheme.com/tspl4/objects.html#./objects:s224
symbol->string	(symbol->string symbol)	https://scheme.com/tspl4/objects.html#./objects:s270
symbol-hash	(symbol-hash symbol)	https://scheme.com/tspl4/objects.html#./objects:s279
symbol=?	(symbol=? symbol1 symbol2)	https://scheme.com/tspl4/objects.html#./objects:s268
symbol?	(symbol? obj)	https://scheme.com/tspl4/objects.html#./objects:s22
syntax	(syntax template)	https://scheme.com/tspl4/syntax.html#./syntax:s33
syntax->datum	(syntax->datum obj)	https://scheme.com/tspl4/syntax.html#./syntax:s44
syntax-case	(syntax-case expr (literal ...) clause ...)	https://scheme.com/tspl4/syntax.html#./syntax:s30
syntax-rules	(syntax-rules (literal ...) clause ...)	https://scheme.com/tspl4/syntax.html#./syntax:s14
syntax-violation	(syntax-violation who msg form)~(syntax-violation who msg form subform)	https://scheme.com/tspl4/exceptions.html#./exceptions:s6
syntax-violation-form	(syntax-violation-form condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s30
syntax-violation-subform	(syntax-violation-subform condition)	https://scheme.com/tspl4/exceptions.html#./exceptions:s30
syntax-violation?	(syntax-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s30
tan	(tan num)	https://scheme.com/tspl4/objects.html#./objects:s131
textual-port?	(textual-port? obj)	https://scheme.com/tspl4/io.html#./io:s45
transcoded-port	(transcoded-port binary-port transcoder)	https://scheme.com/tspl4/io.html#./io:s47
transcoder-codec	(transcoder-codec transcoder)	https://scheme.com/tspl4/io.html#./io:s20
transcoder-eol-style	(transcoder-eol-style transcoder)	https://scheme.com/tspl4/io.html#./io:s20
transcoder-error-handling-mode	(transcoder-error-handling-mode transcoder)	https://scheme.com/tspl4/io.html#./io:s20
truncate	(truncate real)	https://scheme.com/tspl4/objects.html#./objects:s101
u8-list->bytevector	(u8-list->bytevector list)	https://scheme.com/tspl4/objects.html#./objects:s253
uint-list->bytevector	(uint-list->bytevector list eness size)	https://scheme.com/tspl4/objects.html#./objects:s261
undefined-violation?	(undefined-violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s31
unless	(unless test-expr expr1 expr2 ...)	https://scheme.com/tspl4/control.html#./control:s17
unquote	(unquote obj ...)	https://scheme.com/tspl4/objects.html#./objects:s5
unquote-splicing	(unquote-splicing obj ...)	https://scheme.com/tspl4/objects.html#./objects:s5
unsyntax	(unsyntax template ...)	https://scheme.com/tspl4/syntax.html#./syntax:s40
unsyntax-splicing	(unsyntax-splicing template ...)	https://scheme.com/tspl4/syntax.html#./syntax:s40
utf-16-codec	(utf-16-codec)	https://scheme.com/tspl4/io.html#./io:s22
utf-8-codec	(utf-8-codec)	https://scheme.com/tspl4/io.html#./io:s22
utf16->string	(utf16->string bytevector endianness)~(utf16->string bytevector endianness endianness-mandatory?)	https://scheme.com/tspl4/io.html#./io:s96
utf32->string	(utf32->string bytevector endianness)~(utf32->string bytevector endianness endianness-mandatory?)	https://scheme.com/tspl4/io.html#./io:s96
utf8->string	(utf8->string bytevector)	https://scheme.com/tspl4/io.html#./io:s95
values	(values obj ...)	https://scheme.com/tspl4/control.html#./control:s70
variable	variable	https://scheme.com/tspl4/binding.html#./binding:s2
vector	(vector obj ...)	https://scheme.com/tspl4/objects.html#./objects:s231
vector->list	(vector->list vector)	https://scheme.com/tspl4/objects.html#./objects:s237
vector-fill!	(vector-fill! vector obj)	https://scheme.com/tspl4/objects.html#./objects:s236
vector-for-each	(vector-for-each procedure vector1 vector2 ...)	https://scheme.com/tspl4/control.html#./control:s47
vector-length	(vector-length vector)	https://scheme.com/tspl4/objects.html#./objects:s233
vector-map	(vector-map procedure vector1 vector1 ...)	https://scheme.com/tspl4/control.html#./control:s44
vector-ref	(vector-ref vector n)	https://scheme.com/tspl4/objects.html#./objects:s234
vector-set!	(vector-set! vector n obj)	https://scheme.com/tspl4/objects.html#./objects:s235
vector-sort	(vector-sort predicate vector)	https://scheme.com/tspl4/objects.html#./objects:s239
vector-sort!	(vector-sort! predicate vector)	https://scheme.com/tspl4/objects.html#./objects:s239
vector?	(vector? obj)	https://scheme.com/tspl4/objects.html#./objects:s21
violation?	(violation? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s20
warning?	(warning? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s23
when	(when test-expr expr1 expr2 ...)	https://scheme.com/tspl4/control.html#./control:s17
who-condition?	(who-condition? obj)	https://scheme.com/tspl4/exceptions.html#./exceptions:s26
with-exception-handler	(with-exception-handler procedure thunk)	https://scheme.com/tspl4/exceptions.html#./exceptions:s7
with-input-from-file	(with-input-from-file path thunk)	https://scheme.com/tspl4/io.html#./io:s79
with-output-to-file	(with-output-to-file path thunk)	https://scheme.com/tspl4/io.html#./io:s80
with-syntax	(with-syntax ((pattern expr) ...) body1 body2 ...)	https://scheme.com/tspl4/syntax.html#./syntax:s38
write	(write obj)~(write obj textual-output-port)	https://scheme.com/tspl4/io.html#./io:s84
write-char	(write-char char)~(write-char char textual-output-port)	https://scheme.com/tspl4/io.html#./io:s86
zero?	(zero? num)	https://scheme.com/tspl4/objects.html#./objects:s93
